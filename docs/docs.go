// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/dorm-owner/login": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "login dorm owner",
                "parameters": [
                    {
                        "description": "login credentials",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginCredentialsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DormOwner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/dorm-owner/register": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "register dorm owner account",
                "parameters": [
                    {
                        "description": "dorm owner registration",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterDormOwnerDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DormOwner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/student/login": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "login student",
                "parameters": [
                    {
                        "description": "login credentials",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginCredentialsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/student/register": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "register student account",
                "parameters": [
                    {
                        "description": "student registration",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterStudentDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dorm": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dorm"
                ],
                "summary": "get list of dorms",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "capacity",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "lat",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "long",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "lower_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "upper_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "zone",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "dorm facility",
                        "name": "dorm_facilities",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "room facility",
                        "name": "room_facilities",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DormDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dorm"
                ],
                "summary": "create dorm",
                "parameters": [
                    {
                        "description": "register dorm",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterDormDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Dorm"
                        }
                    }
                }
            }
        },
        "/dorm/facility": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dorm"
                ],
                "summary": "get dorm facilities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/dorm/suggest/{letter}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dorm"
                ],
                "summary": "get dorm names from first letter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "First Letter",
                        "name": "letter",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DormSuggestionDTO"
                            }
                        }
                    }
                }
            }
        },
        "/dorm/zone": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dorm"
                ],
                "summary": "get dorm zones",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/dorm/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dorm"
                ],
                "summary": "get dorm details from dorm id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dorm ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Dorm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dorm"
                ],
                "summary": "update dorm",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dorm ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "register dorm",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateDormDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Dorm"
                        }
                    }
                }
            }
        },
        "/room/facility": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "room"
                ],
                "summary": "get room facilities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/room/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "room"
                ],
                "summary": "get room by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Room"
                        }
                    }
                }
            }
        },
        "/roommate-request/no-room": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roommate-request"
                ],
                "summary": "get roommate requests with no room",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "lower_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "pet_habit_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "room_care_habit_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sleep_habit_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "smoke_habit_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "study_habit_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "upper_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "zone",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "gender",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "faculty",
                        "name": "faculties",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "year of study",
                        "name": "year_of_study",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.RoommateRequestWithNoRoom"
                            }
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roommate-request"
                ],
                "summary": "create roommate request with no room",
                "parameters": [
                    {
                        "description": "no room request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RoommateRequestNoRoomDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RoommateRequestWithNoRoom"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roommate-request"
                ],
                "summary": "create roommate request with no room",
                "parameters": [
                    {
                        "description": "no room request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RoommateRequestNoRoomDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RoommateRequestWithNoRoom"
                        }
                    }
                }
            }
        },
        "/roommate-request/registered-dorm": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roommate-request"
                ],
                "summary": "update roommate request reg dorm",
                "parameters": [
                    {
                        "description": "reg dorm update",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RoommateRequestRegDormDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RoommateRequestWithRegisteredDorm"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roommate-request"
                ],
                "summary": "create roommate request with reg dorm",
                "parameters": [
                    {
                        "description": "reg dorm request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RoommateRequestRegDormDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RoommateRequestWithRegisteredDorm"
                        }
                    }
                }
            }
        },
        "/roommate-request/registered-dorm/picture": {
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roommate-request"
                ],
                "summary": "update roommate request with reg dorm pictures",
                "parameters": [
                    {
                        "type": "string",
                        "name": "student_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "upload multiple room pictures,test this out in postman",
                        "name": "room_pictures",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RoommateRequestWithUnregisteredDorm"
                        }
                    }
                }
            }
        },
        "/roommate-request/room": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roommate-request"
                ],
                "summary": "get roommate requests with room",
                "parameters": [
                    {
                        "type": "string",
                        "name": "dorm_name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "lower_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "pet_habit_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "room_care_habit_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sleep_habit_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "smoke_habit_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "study_habit_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "upper_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "zone",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "gender",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "faculty",
                        "name": "faculties",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "year of study",
                        "name": "year_of_study",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "number of roommates",
                        "name": "number_of_roommates",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "room facilities",
                        "name": "room_facilities",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.RoommateRequestWithRoomDTO"
                            }
                        }
                    }
                }
            }
        },
        "/roommate-request/unregistered-dorm": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roommate-request"
                ],
                "summary": "update roommate request with unreg dorm",
                "parameters": [
                    {
                        "description": "unreg dorm request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RoommateRequestUnregDormDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RoommateRequestWithUnregisteredDorm"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roommate-request"
                ],
                "summary": "create roommate request with unreg dorm",
                "parameters": [
                    {
                        "description": "unreg dorm request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RoommateRequestUnregDormDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RoommateRequestWithUnregisteredDorm"
                        }
                    }
                }
            }
        },
        "/roommate-request/unregistered-dorm/picture": {
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roommate-request"
                ],
                "summary": "update roommate request with unreg dorm pictures",
                "parameters": [
                    {
                        "type": "string",
                        "name": "student_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "upload multiple room pictures,test this out in postman",
                        "name": "room_pictures",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RoommateRequestWithUnregisteredDorm"
                        }
                    }
                }
            }
        },
        "/roommate-request/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roommate-request"
                ],
                "summary": "get roommate request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roommate request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.RoommateRequestDTO"
                            }
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roommate-request"
                ],
                "summary": "delete roommate request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roommate request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/student/faculty": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "get faculties",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/student/habit": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "get habits",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HabitDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/student/picture/{id}": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "upload profile picture",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "profile picture",
                        "name": "profile_picture",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "upload multiple pet pictures,test this out in postman",
                        "name": "pet_pictures",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/student/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "get student profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "update student detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "student update",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dto.StudentUpdateSwagDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.DormDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "starting_price": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "dto.DormSuggestionDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.HabitDTO": {
            "type": "object",
            "properties": {
                "pet_habit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PetHabit"
                    }
                },
                "room_care_habit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RoomCareHabit"
                    }
                },
                "sleep_habit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SleepHabit"
                    }
                },
                "smoke_habit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SmokeHabit"
                    }
                },
                "study_habit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StudyHabit"
                    }
                }
            }
        },
        "dto.LoginCredentialsDTO": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.RegisterDormDTO": {
            "type": "object",
            "required": [
                "address",
                "facilities",
                "lat",
                "long",
                "name",
                "owner_id",
                "type",
                "zone"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "rules": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "dto.RegisterDormOwnerDTO": {
            "type": "object",
            "required": [
                "email",
                "firstname",
                "lastname",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.RegisterStudentDTO": {
            "type": "object",
            "required": [
                "email",
                "enrollment_year",
                "faculty",
                "firstname",
                "gender",
                "lastname",
                "password",
                "student_id"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "enrollment_year": {
                    "type": "integer"
                },
                "faculty": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "student_id": {
                    "type": "string"
                }
            }
        },
        "dto.RoommateRequestDTO": {
            "type": "object",
            "properties": {
                "budget": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AllRoomFacility"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "interested_dorm_zones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DormZone"
                    }
                },
                "name": {
                    "type": "string"
                },
                "number_of_roommates": {
                    "type": "integer"
                },
                "pictures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Picture"
                    }
                },
                "price": {
                    "type": "integer"
                },
                "shared_room_price": {
                    "type": "integer"
                },
                "size": {
                    "type": "number"
                },
                "student": {
                    "$ref": "#/definitions/model.Student"
                },
                "type": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "dto.RoommateRequestNoRoomDTO": {
            "type": "object",
            "required": [
                "budget",
                "student_id",
                "zones"
            ],
            "properties": {
                "budget": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "string"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.RoommateRequestRegDormDTO": {
            "type": "object",
            "required": [
                "dorm_id",
                "number_of_roommates",
                "room_id",
                "shared_room_price",
                "student_id"
            ],
            "properties": {
                "dorm_id": {
                    "type": "string"
                },
                "number_of_roommates": {
                    "type": "integer"
                },
                "room_id": {
                    "type": "string"
                },
                "shared_room_price": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "string"
                }
            }
        },
        "dto.RoommateRequestUnregDormDTO": {
            "type": "object",
            "required": [
                "dorm_name",
                "number_of_roommates",
                "room_description",
                "room_facilities",
                "room_price",
                "room_size",
                "shared_room_price",
                "student_id",
                "zone"
            ],
            "properties": {
                "dorm_name": {
                    "type": "string"
                },
                "number_of_roommates": {
                    "type": "integer"
                },
                "room_description": {
                    "type": "string"
                },
                "room_facilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "room_price": {
                    "type": "integer"
                },
                "room_size": {
                    "type": "number"
                },
                "shared_room_price": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "dto.RoommateRequestWithRoomDTO": {
            "type": "object",
            "properties": {
                "dorm_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "picture": {
                    "type": "string"
                },
                "shared_room_price": {
                    "type": "integer"
                },
                "student": {
                    "$ref": "#/definitions/model.Student"
                }
            }
        },
        "dto.StudentUpdateSwagDTO": {
            "type": "object",
            "required": [
                "enrollment_year"
            ],
            "properties": {
                "biography": {
                    "type": "string"
                },
                "enrollment_year": {
                    "type": "integer"
                },
                "facebook_url": {
                    "type": "string"
                },
                "instagram_url": {
                    "type": "string"
                },
                "linkedin_url": {
                    "type": "string"
                },
                "other_preference": {
                    "type": "string"
                },
                "pet_habit_id": {
                    "type": "string"
                },
                "preferred_gender": {
                    "type": "string"
                },
                "preferred_pet_habit_id": {
                    "type": "string"
                },
                "preferred_room_care_habit_id": {
                    "type": "string"
                },
                "preferred_sleep_habit_id": {
                    "type": "string"
                },
                "preferred_smoke_habit_id": {
                    "type": "string"
                },
                "preferred_study_habit_id": {
                    "type": "string"
                },
                "room_care_habit_id": {
                    "type": "string"
                },
                "sleep_habit_id": {
                    "type": "string"
                },
                "smoke_habit_id": {
                    "type": "string"
                },
                "study_habit_id": {
                    "type": "string"
                },
                "twitter_url": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateDormDTO": {
            "type": "object",
            "required": [
                "owner_id"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "rules": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "model.AllDormFacility": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.AllRoomFacility": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Dorm": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dorm_owner": {
                    "$ref": "#/definitions/model.DormOwner"
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AllDormFacility"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "nearby_locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.NearbyLocation"
                    }
                },
                "pictures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DormPicture"
                    }
                },
                "rooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Room"
                    }
                },
                "rules": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "model.DormOwner": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastname": {
                    "type": "string"
                }
            }
        },
        "model.DormPicture": {
            "type": "object",
            "properties": {
                "picture_url": {
                    "type": "string"
                }
            }
        },
        "model.DormZone": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Location": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.NearbyLocation": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "number"
                },
                "location": {
                    "$ref": "#/definitions/model.Location"
                }
            }
        },
        "model.PersonalHabit": {
            "type": "object",
            "properties": {
                "pet_habit": {
                    "$ref": "#/definitions/model.PetHabit"
                },
                "room_care_habit": {
                    "$ref": "#/definitions/model.RoomCareHabit"
                },
                "sleep_habit": {
                    "$ref": "#/definitions/model.SleepHabit"
                },
                "smoke_habit": {
                    "$ref": "#/definitions/model.SmokeHabit"
                },
                "study_habit": {
                    "$ref": "#/definitions/model.StudyHabit"
                }
            }
        },
        "model.PetHabit": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.PetPicture": {
            "type": "object",
            "properties": {
                "picture_url": {
                    "type": "string"
                }
            }
        },
        "model.Picture": {
            "type": "object",
            "properties": {
                "picture_url": {
                    "type": "string"
                }
            }
        },
        "model.Room": {
            "type": "object",
            "properties": {
                "available": {
                    "description": "TODO: change to available from? keep as date",
                    "type": "boolean"
                },
                "capacity": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AllRoomFacility"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pictures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RoomPicture"
                    }
                },
                "price": {
                    "type": "integer"
                },
                "size": {
                    "type": "number"
                }
            }
        },
        "model.RoomCareHabit": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.RoomPicture": {
            "type": "object",
            "properties": {
                "picture_url": {
                    "type": "string"
                }
            }
        },
        "model.RoommatePreference": {
            "type": "object",
            "properties": {
                "other_preference": {
                    "type": "string"
                },
                "preferred_gender": {
                    "type": "string"
                },
                "preferred_pet_habit": {
                    "$ref": "#/definitions/model.PetHabit"
                },
                "preferred_room_care_habit": {
                    "$ref": "#/definitions/model.RoomCareHabit"
                },
                "preferred_sleep_habit": {
                    "$ref": "#/definitions/model.SleepHabit"
                },
                "preferred_smoke_habit": {
                    "$ref": "#/definitions/model.SmokeHabit"
                },
                "preferred_study_habit": {
                    "$ref": "#/definitions/model.StudyHabit"
                }
            }
        },
        "model.RoommateRequestRegisteredDormPicture": {
            "type": "object",
            "properties": {
                "picture_url": {
                    "type": "string"
                }
            }
        },
        "model.RoommateRequestUnregisteredDormPicture": {
            "type": "object",
            "properties": {
                "picture_url": {
                    "type": "string"
                }
            }
        },
        "model.RoommateRequestWithNoRoom": {
            "type": "object",
            "properties": {
                "budget": {
                    "type": "integer"
                },
                "student": {
                    "$ref": "#/definitions/model.Student"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DormZone"
                    }
                }
            }
        },
        "model.RoommateRequestWithRegisteredDorm": {
            "type": "object",
            "properties": {
                "dorm_id": {
                    "type": "integer"
                },
                "number_of_roommates": {
                    "type": "integer"
                },
                "room_id": {
                    "type": "integer"
                },
                "room_pictures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RoommateRequestRegisteredDormPicture"
                    }
                },
                "shared_room_price": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "string"
                }
            }
        },
        "model.RoommateRequestWithUnregisteredDorm": {
            "type": "object",
            "properties": {
                "dorm_name": {
                    "type": "string"
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AllRoomFacility"
                    }
                },
                "number_of_roommates": {
                    "type": "integer"
                },
                "room_description": {
                    "type": "string"
                },
                "room_pictures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RoommateRequestUnregisteredDormPicture"
                    }
                },
                "room_price": {
                    "type": "integer"
                },
                "shared_room_price": {
                    "type": "integer"
                },
                "size": {
                    "type": "number"
                },
                "student_id": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "model.SleepHabit": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.SmokeHabit": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.SocialMedia": {
            "type": "object",
            "properties": {
                "facebook_url": {
                    "type": "string"
                },
                "instagram_url": {
                    "type": "string"
                },
                "linkedin_url": {
                    "type": "string"
                },
                "twitter_url": {
                    "type": "string"
                }
            }
        },
        "model.Student": {
            "type": "object",
            "properties": {
                "biography": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enrollment_year": {
                    "type": "integer"
                },
                "faculty": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "personal_habit": {
                    "$ref": "#/definitions/model.PersonalHabit"
                },
                "pet_pictures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PetPicture"
                    }
                },
                "picture_url": {
                    "type": "string"
                },
                "roommate_preference": {
                    "$ref": "#/definitions/model.RoommatePreference"
                },
                "social_media": {
                    "$ref": "#/definitions/model.SocialMedia"
                }
            }
        },
        "model.StudyHabit": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
