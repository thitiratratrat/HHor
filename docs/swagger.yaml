definitions:
  dto.DormDTO:
    properties:
      id:
        type: string
      lat:
        type: number
      long:
        type: number
      name:
        type: string
      picture:
        type: string
      starting_price:
        type: integer
      zone:
        type: string
    type: object
  dto.DormSuggestionDTO:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  dto.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  dto.LoginCredentialsDTO:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.PersonalHabit:
    properties:
      pet_habit_id:
        type: string
      room_care_habit_id:
        type: string
      sleep_habit_id:
        type: string
      smoke_habit_id:
        type: string
      study_habit_id:
        type: string
    type: object
  dto.RegisterStudentDTO:
    properties:
      email:
        type: string
      enrollment_year:
        type: integer
      faculty:
        type: string
      firstname:
        type: string
      gender:
        type: string
      lastname:
        type: string
      password:
        type: string
      student_id:
        type: string
    required:
    - email
    - enrollment_year
    - faculty
    - firstname
    - gender
    - lastname
    - password
    - student_id
    type: object
  dto.RoommatePreference:
    properties:
      other_preference:
        type: string
      preferred_gender:
        type: string
      preferred_pet_habit_id:
        type: string
      preferred_room_care_habit_id:
        type: string
      preferred_sleep_habit_id:
        type: string
      preferred_smoke_habit_id:
        type: string
      preferred_study_habit_id:
        type: string
    type: object
  dto.RoommateRequestWithNoRoomDTO:
    properties:
      budget:
        type: integer
      student_id:
        type: string
      zones:
        items:
          type: string
        type: array
    required:
    - budget
    - student_id
    - zones
    type: object
  dto.RoommateRequestWithRegisteredDormDTO:
    properties:
      dorm_id:
        type: string
      number_of_roommates:
        type: integer
      room_id:
        type: string
      shared_room_price:
        type: integer
      student_id:
        type: string
    required:
    - dorm_id
    - number_of_roommates
    - room_id
    - shared_room_price
    - student_id
    type: object
  dto.RoommateRequestWithUnregisteredDormDTO:
    properties:
      dorm_name:
        type: string
      number_of_roommates:
        type: integer
      room_description:
        type: string
      room_facilities:
        items:
          type: string
        type: array
      room_price:
        type: integer
      room_size:
        type: number
      shared_room_price:
        type: integer
      student_id:
        type: string
      zone:
        type: string
    required:
    - dorm_name
    - number_of_roommates
    - room_description
    - room_facilities
    - room_price
    - room_size
    - shared_room_price
    - student_id
    - zone
    type: object
  dto.SocialMedia:
    properties:
      facebook_url:
        type: string
      instagram_url:
        type: string
      linkedin_url:
        type: string
      twitter_url:
        type: string
    type: object
  dto.StudentUpdateDTO:
    properties:
      biography:
        type: string
      enrollment_year:
        type: integer
      personal_habit:
        $ref: '#/definitions/dto.PersonalHabit'
      roommate_preference:
        $ref: '#/definitions/dto.RoommatePreference'
      social_media:
        $ref: '#/definitions/dto.SocialMedia'
    type: object
  model.AllDormFacility:
    properties:
      name:
        type: string
    type: object
  model.AllRoomFacility:
    properties:
      name:
        type: string
    type: object
  model.Dorm:
    properties:
      address:
        type: string
      description:
        type: string
      dorm_owner:
        $ref: '#/definitions/model.DormOwner'
      facilities:
        items:
          $ref: '#/definitions/model.AllDormFacility'
        type: array
      id:
        type: integer
      lat:
        type: number
      long:
        type: number
      name:
        type: string
      nearby_locations:
        items:
          $ref: '#/definitions/model.NearbyLocation'
        type: array
      pictures:
        items:
          $ref: '#/definitions/model.DormPicture'
        type: array
      rooms:
        items:
          $ref: '#/definitions/model.Room'
        type: array
      rules:
        type: string
      type:
        type: string
      zone:
        type: string
    type: object
  model.DormOwner:
    properties:
      email:
        type: string
      firstname:
        type: string
      id:
        type: integer
      lastname:
        type: string
    type: object
  model.DormPicture:
    properties:
      picture_url:
        type: string
    type: object
  model.DormZone:
    properties:
      name:
        type: string
    type: object
  model.Location:
    properties:
      id:
        type: integer
      lat:
        type: number
      long:
        type: number
      name:
        type: string
    type: object
  model.NearbyLocation:
    properties:
      distance:
        type: number
      location:
        $ref: '#/definitions/model.Location'
    type: object
  model.PersonalHabit:
    properties:
      pet_habit:
        $ref: '#/definitions/model.PetHabit'
      room_care_habit:
        $ref: '#/definitions/model.RoomCareHabit'
      sleep_habit:
        $ref: '#/definitions/model.SleepHabit'
      smoke_habit:
        $ref: '#/definitions/model.SmokeHabit'
      study_habit:
        $ref: '#/definitions/model.StudyHabit'
    type: object
  model.PetHabit:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  model.PetPicture:
    properties:
      picture_url:
        type: string
    type: object
  model.Room:
    properties:
      available:
        description: 'TODO: change to available from? keep as date'
        type: boolean
      capacity:
        type: integer
      description:
        type: string
      facilities:
        items:
          $ref: '#/definitions/model.AllRoomFacility'
        type: array
      id:
        type: integer
      name:
        type: string
      pictures:
        items:
          $ref: '#/definitions/model.RoomPicture'
        type: array
      price:
        type: integer
      size:
        type: number
    type: object
  model.RoomCareHabit:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  model.RoomPicture:
    properties:
      picture_url:
        type: string
    type: object
  model.RoommatePreference:
    properties:
      other_preference:
        type: string
      preferred_gender:
        type: string
      preferred_pet_habit:
        $ref: '#/definitions/model.PetHabit'
      preferred_room_care_habit:
        $ref: '#/definitions/model.RoomCareHabit'
      preferred_sleep_habit:
        $ref: '#/definitions/model.SleepHabit'
      preferred_smoke_habit:
        $ref: '#/definitions/model.SmokeHabit'
      preferred_study_habit:
        $ref: '#/definitions/model.StudyHabit'
    type: object
  model.RoommateRequestRegisteredDormPicture:
    properties:
      picture_url:
        type: string
    type: object
  model.RoommateRequestUnregisteredDormPicture:
    properties:
      picture_url:
        type: string
    type: object
  model.RoommateRequestWithNoRoom:
    properties:
      budget:
        type: integer
      student_id:
        type: string
      zones:
        items:
          $ref: '#/definitions/model.DormZone'
        type: array
    type: object
  model.RoommateRequestWithRegisteredDorm:
    properties:
      dorm_id:
        type: integer
      number_of_roommates:
        type: integer
      room_id:
        type: integer
      room_pictures:
        items:
          $ref: '#/definitions/model.RoommateRequestRegisteredDormPicture'
        type: array
      shared_room_price:
        type: integer
      student_id:
        type: string
    type: object
  model.RoommateRequestWithUnregisteredDorm:
    properties:
      dorm_name:
        type: string
      facilities:
        items:
          $ref: '#/definitions/model.AllRoomFacility'
        type: array
      number_of_roommates:
        type: integer
      room_description:
        type: string
      room_pictures:
        items:
          $ref: '#/definitions/model.RoommateRequestUnregisteredDormPicture'
        type: array
      room_price:
        type: integer
      shared_room_price:
        type: integer
      size:
        type: number
      student_id:
        type: string
      zone:
        type: string
    type: object
  model.SleepHabit:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  model.SmokeHabit:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  model.SocialMedia:
    properties:
      facebook_url:
        type: string
      instagram_url:
        type: string
      linkedin_url:
        type: string
      twitter_url:
        type: string
    type: object
  model.Student:
    properties:
      biography:
        type: string
      email:
        type: string
      enrollment_year:
        type: integer
      faculty:
        type: string
      firstname:
        type: string
      gender:
        type: string
      id:
        type: string
      lastname:
        type: string
      personal_habit:
        $ref: '#/definitions/model.PersonalHabit'
      pet_pictures:
        items:
          $ref: '#/definitions/model.PetPicture'
        type: array
      picture_url:
        type: string
      roommate_preference:
        $ref: '#/definitions/model.RoommatePreference'
      social_media:
        $ref: '#/definitions/model.SocialMedia'
    type: object
  model.StudyHabit:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/student/login:
    post:
      description: login
      parameters:
      - description: login credentials
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LoginCredentialsDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: login
      tags:
      - auth
  /auth/student/register:
    post:
      description: register student account
      parameters:
      - description: student registration
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterStudentDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Student'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: register student account
      tags:
      - auth
  /dorm:
    get:
      consumes:
      - application/json
      description: returns list of dorms filter by dorm type, zone,capacity, location,
        dorm and room facilities
      parameters:
      - in: query
        name: capacity
        type: integer
      - in: query
        items:
          type: string
        name: dorm_facilities
        type: array
      - in: query
        name: lat
        type: number
      - in: query
        name: long
        type: number
      - in: query
        name: lower_price
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        items:
          type: string
        name: room_facilities
        type: array
      - in: query
        items:
          type: string
        name: type
        type: array
      - in: query
        name: upper_price
        type: integer
      - in: query
        name: zone
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.DormDTO'
            type: array
      summary: get list of dorms
      tags:
      - dorm
  /dorm/{id}:
    get:
      description: returns dorm details
      parameters:
      - description: Dorm ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Dorm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: get dorm details from dorm id
      tags:
      - dorm
  /dorm/facility:
    get:
      description: returns list of dorm facilities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: get dorm facilities
      tags:
      - dorm
  /dorm/suggest/{letter}:
    get:
      description: returns list of dorm names from first letter
      parameters:
      - description: First Letter
        in: path
        name: letter
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.DormSuggestionDTO'
            type: array
      summary: get dorm names from first letter
      tags:
      - dorm
  /dorm/zone:
    get:
      description: returns list of dorm zones
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: get dorm zones
      tags:
      - dorm
  /room/{id}:
    get:
      description: return room detail
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Room'
      summary: get room by id
      tags:
      - room
  /room/facility:
    get:
      description: returns list of room facilities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: get room facilities
      tags:
      - room
  /roommate-request/no-room:
    post:
      description: create roommate request with no room
      parameters:
      - description: no room request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RoommateRequestWithNoRoomDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoommateRequestWithNoRoom'
      summary: create roommate request with no room
      tags:
      - roommate-request
  /roommate-request/registered-dorm:
    post:
      consumes:
      - application/json
      description: create roommate request with registered dorm
      parameters:
      - description: registered dorm request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RoommateRequestWithRegisteredDormDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoommateRequestWithRegisteredDorm'
      summary: create roommate request with registered dorm
      tags:
      - roommate-request
  /roommate-request/registered-dorm/picture:
    put:
      consumes:
      - multipart/form-data
      description: update roommate request with reg dorm pictures
      parameters:
      - in: formData
        name: student_id
        required: true
        type: string
      - description: upload multiple room pictures,test this out in postman
        in: formData
        name: room_pictures
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoommateRequestWithUnregisteredDorm'
      summary: update roommate request with reg dorm pictures
      tags:
      - roommate-request
  /roommate-request/unregistered-dorm:
    post:
      consumes:
      - application/json
      description: create roommate request with unregistered dorm
      parameters:
      - description: unregistered dorm request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RoommateRequestWithUnregisteredDormDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoommateRequestWithUnregisteredDorm'
      summary: create roommate request with unregistered dorm
      tags:
      - roommate-request
  /roommate-request/unregistered-dorm/picture:
    put:
      consumes:
      - multipart/form-data
      description: update roommate request with reg dorm pictures
      parameters:
      - in: formData
        name: student_id
        required: true
        type: string
      - description: upload multiple room pictures,test this out in postman
        in: formData
        name: room_pictures
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoommateRequestWithUnregisteredDorm'
      summary: update roommate request with unreg dorm pictures
      tags:
      - roommate-request
  /student/{id}:
    get:
      description: returns student profile
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Student'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: get student profile
      tags:
      - student
    patch:
      description: update student detail
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      - description: student update
        in: body
        name: data
        schema:
          $ref: '#/definitions/dto.StudentUpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Student'
      summary: update student detail
      tags:
      - student
  /student/picture/{id}:
    post:
      consumes:
      - multipart/form-data
      description: upload profile picture
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      - description: profile picture
        in: formData
        name: profile_picture
        type: file
      - description: upload multiple pet pictures,test this out in postman
        in: formData
        name: pet_pictures
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Student'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: upload profile picture
      tags:
      - student
swagger: "2.0"
